{"uid":"2bba371427b3f528","name":"test_lowest_price","fullName":"projekt_zaliczeniowy.tests.testy_sortowania.mobile.test_mobile_sortowanie_po_najniższej_cenie#test_lowest_price","historyId":"e5f3cb7abaf11aa394506b842c21c2a1","time":{"start":1746200235680,"stop":1746200261555,"duration":25875},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btnPrimary btn--fluid Button__buttonContainerFontWeight__3oaib\" data-test=\"mobileFiltersSubmitButton\">...</button> is not clickable at point (250, 755). Other element would receive the click: <div class=\"Filters__filtersLoader__qVvBU\">...</div>\n  (Session info: chrome=135.0.7049.114)\nStacktrace:\n#0 0x55cf9886975a <unknown>\n#1 0x55cf9831c4b0 <unknown>\n#2 0x55cf983747dc <unknown>\n#3 0x55cf98372645 <unknown>\n#4 0x55cf9836fce2 <unknown>\n#5 0x55cf9836f3e0 <unknown>\n#6 0x55cf983619ed <unknown>\n#7 0x55cf98393592 <unknown>\n#8 0x55cf9836136a <unknown>\n#9 0x55cf9839375e <unknown>\n#10 0x55cf983b95e0 <unknown>\n#11 0x55cf98393363 <unknown>\n#12 0x55cf9835fd63 <unknown>\n#13 0x55cf983609c1 <unknown>\n#14 0x55cf9882ea6b <unknown>\n#15 0x55cf98832951 <unknown>\n#16 0x55cf98816b62 <unknown>\n#17 0x55cf988334c4 <unknown>\n#18 0x55cf987fb13f <unknown>\n#19 0x55cf988576f8 <unknown>\n#20 0x55cf988578d6 <unknown>\n#21 0x55cf988685a6 <unknown>\n#22 0x7fd11809caa4 <unknown>\n#23 0x7fd118129c3c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d5b904db34b955ea7c2c61ce669741bb\")>\n\n    @pytest.mark.regression\n    @allure.feature(\"Sortowanie\")\n    @allure.story(\"Sortowanie po najniższej cenie\")\n    def test_lowest_price(driver):\n        website = Login(driver)\n        website.open_website()\n        website.accept_cookies()\n        lowest_price = Sorting(driver)\n        lowest_price.she_button_click()\n        lowest_price.new_button_click()\n        lowest_price.mobile_filters_button_click()\n        lowest_price.sorting_button_click()\n        lowest_price.lowest_button_click()\n        lowest_price.submit_button_click()\n>       lowest_price.view_products_click()\n\ntesty_sortowania/mobile/test_mobile_sortowanie_po_najniższej_cenie.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../services/sortowanie/sortowanie.py:109: in view_products_click\n    self.driver.find_element(*self.view_products).click()\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:572: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4218333410>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55cf988685a6 \\\\u003Cunknown>\\\\n#22 0x7fd11809caa4 \\\\u003Cunknown>\\\\n#23 0x7fd118129c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btnPrimary btn--fluid Button__buttonContainerFontWeight__3oaib\" data-test=\"mobileFiltersSubmitButton\">...</button> is not clickable at point (250, 755). Other element would receive the click: <div class=\"Filters__filtersLoader__qVvBU\">...</div>\nE         (Session info: chrome=135.0.7049.114)\nE       Stacktrace:\nE       #0 0x55cf9886975a <unknown>\nE       #1 0x55cf9831c4b0 <unknown>\nE       #2 0x55cf983747dc <unknown>\nE       #3 0x55cf98372645 <unknown>\nE       #4 0x55cf9836fce2 <unknown>\nE       #5 0x55cf9836f3e0 <unknown>\nE       #6 0x55cf983619ed <unknown>\nE       #7 0x55cf98393592 <unknown>\nE       #8 0x55cf9836136a <unknown>\nE       #9 0x55cf9839375e <unknown>\nE       #10 0x55cf983b95e0 <unknown>\nE       #11 0x55cf98393363 <unknown>\nE       #12 0x55cf9835fd63 <unknown>\nE       #13 0x55cf983609c1 <unknown>\nE       #14 0x55cf9882ea6b <unknown>\nE       #15 0x55cf98832951 <unknown>\nE       #16 0x55cf98816b62 <unknown>\nE       #17 0x55cf988334c4 <unknown>\nE       #18 0x55cf987fb13f <unknown>\nE       #19 0x55cf988576f8 <unknown>\nE       #20 0x55cf988578d6 <unknown>\nE       #21 0x55cf988685a6 <unknown>\nE       #22 0x7fd11809caa4 <unknown>\nE       #23 0x7fd118129c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1746200235351,"stop":1746200235679,"duration":328},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btnPrimary btn--fluid Button__buttonContainerFontWeight__3oaib\" data-test=\"mobileFiltersSubmitButton\">...</button> is not clickable at point (250, 755). Other element would receive the click: <div class=\"Filters__filtersLoader__qVvBU\">...</div>\n  (Session info: chrome=135.0.7049.114)\nStacktrace:\n#0 0x55cf9886975a <unknown>\n#1 0x55cf9831c4b0 <unknown>\n#2 0x55cf983747dc <unknown>\n#3 0x55cf98372645 <unknown>\n#4 0x55cf9836fce2 <unknown>\n#5 0x55cf9836f3e0 <unknown>\n#6 0x55cf983619ed <unknown>\n#7 0x55cf98393592 <unknown>\n#8 0x55cf9836136a <unknown>\n#9 0x55cf9839375e <unknown>\n#10 0x55cf983b95e0 <unknown>\n#11 0x55cf98393363 <unknown>\n#12 0x55cf9835fd63 <unknown>\n#13 0x55cf983609c1 <unknown>\n#14 0x55cf9882ea6b <unknown>\n#15 0x55cf98832951 <unknown>\n#16 0x55cf98816b62 <unknown>\n#17 0x55cf988334c4 <unknown>\n#18 0x55cf987fb13f <unknown>\n#19 0x55cf988576f8 <unknown>\n#20 0x55cf988578d6 <unknown>\n#21 0x55cf988685a6 <unknown>\n#22 0x7fd11809caa4 <unknown>\n#23 0x7fd118129c3c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d5b904db34b955ea7c2c61ce669741bb\")>\n\n    @pytest.mark.regression\n    @allure.feature(\"Sortowanie\")\n    @allure.story(\"Sortowanie po najniższej cenie\")\n    def test_lowest_price(driver):\n        website = Login(driver)\n        website.open_website()\n        website.accept_cookies()\n        lowest_price = Sorting(driver)\n        lowest_price.she_button_click()\n        lowest_price.new_button_click()\n        lowest_price.mobile_filters_button_click()\n        lowest_price.sorting_button_click()\n        lowest_price.lowest_button_click()\n        lowest_price.submit_button_click()\n>       lowest_price.view_products_click()\n\ntesty_sortowania/mobile/test_mobile_sortowanie_po_najniższej_cenie.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../services/sortowanie/sortowanie.py:109: in view_products_click\n    self.driver.find_element(*self.view_products).click()\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:572: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4218333410>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55cf988685a6 \\\\u003Cunknown>\\\\n#22 0x7fd11809caa4 \\\\u003Cunknown>\\\\n#23 0x7fd118129c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btnPrimary btn--fluid Button__buttonContainerFontWeight__3oaib\" data-test=\"mobileFiltersSubmitButton\">...</button> is not clickable at point (250, 755). Other element would receive the click: <div class=\"Filters__filtersLoader__qVvBU\">...</div>\nE         (Session info: chrome=135.0.7049.114)\nE       Stacktrace:\nE       #0 0x55cf9886975a <unknown>\nE       #1 0x55cf9831c4b0 <unknown>\nE       #2 0x55cf983747dc <unknown>\nE       #3 0x55cf98372645 <unknown>\nE       #4 0x55cf9836fce2 <unknown>\nE       #5 0x55cf9836f3e0 <unknown>\nE       #6 0x55cf983619ed <unknown>\nE       #7 0x55cf98393592 <unknown>\nE       #8 0x55cf9836136a <unknown>\nE       #9 0x55cf9839375e <unknown>\nE       #10 0x55cf983b95e0 <unknown>\nE       #11 0x55cf98393363 <unknown>\nE       #12 0x55cf9835fd63 <unknown>\nE       #13 0x55cf983609c1 <unknown>\nE       #14 0x55cf9882ea6b <unknown>\nE       #15 0x55cf98832951 <unknown>\nE       #16 0x55cf98816b62 <unknown>\nE       #17 0x55cf988334c4 <unknown>\nE       #18 0x55cf987fb13f <unknown>\nE       #19 0x55cf988576f8 <unknown>\nE       #20 0x55cf988578d6 <unknown>\nE       #21 0x55cf988685a6 <unknown>\nE       #22 0x7fd11809caa4 <unknown>\nE       #23 0x7fd118129c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","steps":[],"attachments":[{"uid":"81ccd4071bac9a3e","name":"stdout","source":"81ccd4071bac9a3e.txt","type":"text/plain","size":52}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1746200261585,"stop":1746200261660,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"story","value":"Sortowanie po najniższej cenie"},{"name":"feature","value":"Sortowanie"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"projekt_zaliczeniowy.tests.testy_sortowania.mobile"},{"name":"suite","value":"test_mobile_sortowanie_po_najniższej_cenie"},{"name":"host","value":"fv-az1314-733"},{"name":"thread","value":"3212-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"projekt_zaliczeniowy.tests.testy_sortowania.mobile.test_mobile_sortowanie_po_najniższej_cenie"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":4,"unknown":0,"total":8},"items":[{"uid":"96766decf141e8d","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/100//#testresult/96766decf141e8d","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btnPrimary btn--fluid Button__buttonContainerFontWeight__3oaib\" data-test=\"mobileFiltersSubmitButton\">...</button> is not clickable at point (250, 755). Other element would receive the click: <div class=\"Filters__filtersLoader__qVvBU\">...</div>\n  (Session info: chrome=135.0.7049.114)\nStacktrace:\n#0 0x5612a443275a <unknown>\n#1 0x5612a3ee54b0 <unknown>\n#2 0x5612a3f3d7dc <unknown>\n#3 0x5612a3f3b645 <unknown>\n#4 0x5612a3f38ce2 <unknown>\n#5 0x5612a3f383e0 <unknown>\n#6 0x5612a3f2a9ed <unknown>\n#7 0x5612a3f5c592 <unknown>\n#8 0x5612a3f2a36a <unknown>\n#9 0x5612a3f5c75e <unknown>\n#10 0x5612a3f825e0 <unknown>\n#11 0x5612a3f5c363 <unknown>\n#12 0x5612a3f28d63 <unknown>\n#13 0x5612a3f299c1 <unknown>\n#14 0x5612a43f7a6b <unknown>\n#15 0x5612a43fb951 <unknown>\n#16 0x5612a43dfb62 <unknown>\n#17 0x5612a43fc4c4 <unknown>\n#18 0x5612a43c413f <unknown>\n#19 0x5612a44206f8 <unknown>\n#20 0x5612a44208d6 <unknown>\n#21 0x5612a44315a6 <unknown>\n#22 0x7fad99c9caa4 <unknown>\n#23 0x7fad99d29c3c <unknown>","time":{"start":1746193906584,"stop":1746193931896,"duration":25312}},{"uid":"db925fcabd2852db","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/97//#testresult/db925fcabd2852db","status":"passed","time":{"start":1746192961251,"stop":1746192988478,"duration":27227}},{"uid":"637dd6340d33b5f6","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/95//#testresult/637dd6340d33b5f6","status":"passed","time":{"start":1746191985780,"stop":1746192016527,"duration":30747}},{"uid":"c228f0001f56abc","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/93//#testresult/c228f0001f56abc","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btnPrimary btn--fluid Button__buttonContainerFontWeight__3oaib\" data-test=\"mobileFiltersSubmitButton\">...</button> is not clickable at point (250, 755). Other element would receive the click: <div class=\"Filters__filtersLoader__qVvBU\">...</div>\n  (Session info: chrome=135.0.7049.114)\nStacktrace:\n#0 0x559d440d675a <unknown>\n#1 0x559d43b894b0 <unknown>\n#2 0x559d43be17dc <unknown>\n#3 0x559d43bdf645 <unknown>\n#4 0x559d43bdcce2 <unknown>\n#5 0x559d43bdc3e0 <unknown>\n#6 0x559d43bce9ed <unknown>\n#7 0x559d43c00592 <unknown>\n#8 0x559d43bce36a <unknown>\n#9 0x559d43c0075e <unknown>\n#10 0x559d43c265e0 <unknown>\n#11 0x559d43c00363 <unknown>\n#12 0x559d43bccd63 <unknown>\n#13 0x559d43bcd9c1 <unknown>\n#14 0x559d4409ba6b <unknown>\n#15 0x559d4409f951 <unknown>\n#16 0x559d44083b62 <unknown>\n#17 0x559d440a04c4 <unknown>\n#18 0x559d4406813f <unknown>\n#19 0x559d440c46f8 <unknown>\n#20 0x559d440c48d6 <unknown>\n#21 0x559d440d55a6 <unknown>\n#22 0x7f205d69caa4 <unknown>\n#23 0x7f205d729c3c <unknown>","time":{"start":1746191405052,"stop":1746191431096,"duration":26044}},{"uid":"6e5c9b37559cbabc","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/91//#testresult/6e5c9b37559cbabc","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btnPrimary btn--fluid Button__buttonContainerFontWeight__3oaib\" data-test=\"mobileFiltersSubmitButton\">...</button> is not clickable at point (250, 755). Other element would receive the click: <div class=\"Filters__filtersLoader__qVvBU\">...</div>\n  (Session info: chrome=135.0.7049.114)\nStacktrace:\n#0 0x558c0db9f75a <unknown>\n#1 0x558c0d6524b0 <unknown>\n#2 0x558c0d6aa7dc <unknown>\n#3 0x558c0d6a8645 <unknown>\n#4 0x558c0d6a5ce2 <unknown>\n#5 0x558c0d6a53e0 <unknown>\n#6 0x558c0d6979ed <unknown>\n#7 0x558c0d6c9592 <unknown>\n#8 0x558c0d69736a <unknown>\n#9 0x558c0d6c975e <unknown>\n#10 0x558c0d6ef5e0 <unknown>\n#11 0x558c0d6c9363 <unknown>\n#12 0x558c0d695d63 <unknown>\n#13 0x558c0d6969c1 <unknown>\n#14 0x558c0db64a6b <unknown>\n#15 0x558c0db68951 <unknown>\n#16 0x558c0db4cb62 <unknown>\n#17 0x558c0db694c4 <unknown>\n#18 0x558c0db3113f <unknown>\n#19 0x558c0db8d6f8 <unknown>\n#20 0x558c0db8d8d6 <unknown>\n#21 0x558c0db9e5a6 <unknown>\n#22 0x7f76d789caa4 <unknown>\n#23 0x7f76d7929c3c <unknown>","time":{"start":1746190963230,"stop":1746190988934,"duration":25704}},{"uid":"65be3cd8e1492e7","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/89//#testresult/65be3cd8e1492e7","status":"passed","time":{"start":1746190633569,"stop":1746190659927,"duration":26358}},{"uid":"385df303c887edd2","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/86//#testresult/385df303c887edd2","status":"passed","time":{"start":1746190343597,"stop":1746190370745,"duration":27148}}]},"tags":["regression"]},"source":"2bba371427b3f528.json","parameterValues":[]}