{"uid":"d395c174fc55ac21","name":"test_correct","fullName":"projekt_zaliczeniowy.tests.testy_logowania.test_poprawne_dane#test_correct","historyId":"c69529fefd2abdfa6ab9a889a3320f6f","time":{"start":1750411777614,"stop":1750411834880,"duration":57266},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dcf272ab3d355a3d2d4e3cadb7971312\")>\n\n    @pytest.mark.regression\n    @allure.feature(\"Logowanie\")\n    @allure.story(\"Logowanie z użyciem poprawnych danych\")\n    def test_correct(driver):\n        correct = Login(driver)\n        config_data = correct.config_data\n        correct.open_website()\n        correct.accept_cookies()\n        correct.user_account()\n        correct.insert_email(config_data['credentials']['email'])\n        correct.insert_password(config_data['credentials']['password'])\n        correct.login_button()\n>       WebDriverWait(driver, 15).until(EC.url_to_be(config_data['credentials']['expected_url']))\n\ntesty_logowania/test_poprawne_dane.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"dcf272ab3d355a3d2d4e3cadb7971312\")>\nmethod = <function url_to_be.<locals>._predicate at 0x7f88422f4900>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1750411777294,"stop":1750411777613,"duration":319},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dcf272ab3d355a3d2d4e3cadb7971312\")>\n\n    @pytest.mark.regression\n    @allure.feature(\"Logowanie\")\n    @allure.story(\"Logowanie z użyciem poprawnych danych\")\n    def test_correct(driver):\n        correct = Login(driver)\n        config_data = correct.config_data\n        correct.open_website()\n        correct.accept_cookies()\n        correct.user_account()\n        correct.insert_email(config_data['credentials']['email'])\n        correct.insert_password(config_data['credentials']['password'])\n        correct.login_button()\n>       WebDriverWait(driver, 15).until(EC.url_to_be(config_data['credentials']['expected_url']))\n\ntesty_logowania/test_poprawne_dane.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"dcf272ab3d355a3d2d4e3cadb7971312\")>\nmethod = <function url_to_be.<locals>._predicate at 0x7f88422f4900>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","steps":[],"attachments":[{"uid":"f5b7062343f08e77","name":"Failure Screenshot","source":"f5b7062343f08e77.png","type":"image/png","size":119778},{"uid":"66698e58a87be114","name":"stdout","source":"66698e58a87be114.txt","type":"text/plain","size":95}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1750411834996,"stop":1750411835069,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"story","value":"Logowanie z użyciem poprawnych danych"},{"name":"feature","value":"Logowanie"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"projekt_zaliczeniowy.tests.testy_logowania"},{"name":"suite","value":"test_poprawne_dane"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"3342-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"projekt_zaliczeniowy.tests.testy_logowania.test_poprawne_dane"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":54,"unknown":0,"total":63},"items":[{"uid":"9798e3f1a195b8e2","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/174//#testresult/9798e3f1a195b8e2","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1750325315052,"stop":1750325373615,"duration":58563}},{"uid":"c134483b120a0e73","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/173//#testresult/c134483b120a0e73","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1750239032062,"stop":1750239090273,"duration":58211}},{"uid":"6238a501aacea12a","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/172//#testresult/6238a501aacea12a","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1750152642103,"stop":1750152699434,"duration":57331}},{"uid":"3882b458a071c64d","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/171//#testresult/3882b458a071c64d","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1750066295098,"stop":1750066353375,"duration":58277}},{"uid":"f237d51f3205742e","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/170//#testresult/f237d51f3205742e","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1749979690047,"stop":1749979747758,"duration":57711}},{"uid":"aefc6f85d7703e19","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/169//#testresult/aefc6f85d7703e19","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1749893261235,"stop":1749893319527,"duration":58292}},{"uid":"586fc4a39e625385","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/168//#testresult/586fc4a39e625385","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1749806987196,"stop":1749807045511,"duration":58315}},{"uid":"8113001e1ec10ad3","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/167//#testresult/8113001e1ec10ad3","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1749720540098,"stop":1749720598985,"duration":58887}},{"uid":"ef8048172462ff5e","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/166//#testresult/ef8048172462ff5e","status":"passed","time":{"start":1749634013987,"stop":1749634039218,"duration":25231}},{"uid":"7787f474939c6949","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/165//#testresult/7787f474939c6949","status":"passed","time":{"start":1749547672546,"stop":1749547697661,"duration":25115}},{"uid":"49757440d7512817","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/164//#testresult/49757440d7512817","status":"passed","time":{"start":1749461255778,"stop":1749461280934,"duration":25156}},{"uid":"72a94fd414c7f816","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/163//#testresult/72a94fd414c7f816","status":"passed","time":{"start":1749374666756,"stop":1749374691037,"duration":24281}},{"uid":"7f17a9eec9f01443","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/162//#testresult/7f17a9eec9f01443","status":"passed","time":{"start":1749288240189,"stop":1749288265048,"duration":24859}},{"uid":"a9b9ffb4f75ca388","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/161//#testresult/a9b9ffb4f75ca388","status":"passed","time":{"start":1749202023590,"stop":1749202047743,"duration":24153}},{"uid":"84af2ed2ccc01122","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/160//#testresult/84af2ed2ccc01122","status":"passed","time":{"start":1749115595004,"stop":1749115619986,"duration":24982}},{"uid":"131bd14a08618e54","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/159//#testresult/131bd14a08618e54","status":"passed","time":{"start":1749029175708,"stop":1749029201816,"duration":26108}},{"uid":"36662d9a62dbeb3a","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/158//#testresult/36662d9a62dbeb3a","status":"passed","time":{"start":1748942781573,"stop":1748942807052,"duration":25479}},{"uid":"283db4382fcb47d5","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/157//#testresult/283db4382fcb47d5","status":"passed","time":{"start":1748856411989,"stop":1748856436727,"duration":24738}},{"uid":"eb928fb3fde7dcb3","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/156//#testresult/eb928fb3fde7dcb3","status":"passed","time":{"start":1748769826524,"stop":1748769851634,"duration":25110}},{"uid":"41aa4bf449d8a33d","reportUrl":"https://aleksandraszczesna.github.io/answear_automation_tests/155//#testresult/41aa4bf449d8a33d","status":"passed","time":{"start":1748683408772,"stop":1748683434080,"duration":25308}}]},"tags":["regression"]},"source":"d395c174fc55ac21.json","parameterValues":[]}